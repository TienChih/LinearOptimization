<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-branchbound" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Branch and Bound Method</title>

  <introduction>
    <p>
      We begin motivating integer optimization problem, and explore an algebraically centered method for solving them.
    </p>
  </introduction>


  <exploration xml:id="exploration-meat">
    <introduction>
      <p>
        Suppose the witch Agnesi also goes into the business of selling food,
        meat sandwiches and meat pies.  Each day she is able to acquire 50 oz of
        mystery meat (don't ask) and 30 oz of flour.  The sandwiches take 8 oz of meat and 2 oz of flour,
        the pies take 3oz of meat and 5 oz of flour.  She is able to sell the sandwiches for 
        10 gold pieces and the pies for 7 gold pieces.
      </p>
      
    </introduction>
    <task>
      <statement>
        <p>
          Agnesi wishes to be able to produce sandwiches and pies in a way
          to maximize her income.  Set up this problem as a linear optimization problem and solve.
        </p>
        <p>
          <sage>
            <input>
              %display typeset
              A = (FIXME)
              b = (FIXME)
              c = (FIXME)
              P = InteractiveLPProblem(A, b, c,
               [FIXME], 
               constraint_type = [FIXME],
               variable_type = [FIXME],
               problem_type = FIXME)
              P
            </input>         
            </sage>
            <sage>
              <input>
                print(P.optimal_solution())
                print(P.optimal_value())
              </input>         
            </sage>
      </p>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          What are some problems with this solution?  Without trying to explicitly find 
          the optimal solution, estimate how far off your current solution is from the optimal.
        </p>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          How many sandwiches and pies should she actually sell to maximize her
          income?
        </p>
        <interactive  platform="doenetml" width="100%" >
          <slate surface="doenetml">
            <xi:include parse="text" href="doenet/integer-branchbound.xml"/>
          </slate>
        </interactive>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          After the local barber has been arrested, demand for Agnesi's pies
          sees an increase, and she is able to now sell them for 12 gold pieces.  Now what production
          level maximizes her income?
        </p>
        <interactive  platform="doenetml" width="100%" >
          <slate surface="doenetml">
            <xi:include parse="text" href="doenet/integer-branchbound.xml"/>
          </slate>
        </interactive>
      </statement>
    </task>

    
    
  </exploration>


  <definition xml:id="def-integerprogram">
    <statement>
      <p>
        A linear optimization problem where all solutions must be integers is called an
        <term>integer optimization problem</term>.
        If the condition that solutions be integers are relaxed, this is called the <term>relaxation</term>
        of the integer optimization problem.
      </p>
    </statement>
  </definition>

  <activity>
    <task>
      <statement>
        <p>
          Come up with three realistic optimization problems which are best modeled
          by an integer optimization problem.  You do not need to work out all the details
          or solve the problems.
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          Consider an integer optimization maximization problem whose relaxation
          achieves an optimal solution.  Which of the following are true about the 
          integer optimization problem?
        </p>
        <ol marker="A.">
          <li>
            <p>
              The integer  problem achieves an optimal solution that is equal to
              the optimal solution of the relaxation.
            </p>
          </li>
          <li>
            <p>
              The integer  problem achieves an optimal solution that is less than to
              the optimal solution of the relaxation.
            </p>
          </li>
          <li>
            <p>
              The integer  problem achieves an optimal solution that is greater than to
              the optimal solution of the relaxation.
            </p>
          </li>
          <li>
            <p>
              The integer  problem is infeasible.
            </p>
          </li>
          <li>
            <p>
              The integer  problem is unbounded above.
            </p>
          </li>
        </ol>
      </statement>
    </task>
  </activity>

  <activity xml:id="activity-meat1">
    <introduction>
      <p>
        The <em>branch and bound</em> method is a way to systematically add bounds to a
        linear optimization problem to ensure the solution is integral.
      </p>
      <p>
        We examine the integer optimization problem from <xref ref="exploration-meat"/>, and its relaxation.
      </p>
    </introduction>
    <task>
      <statement>
        <p>
          Let <m>x_1</m> be the number of sandwiches sold, and consider the current optimal <m>x_1</m> from the relaxation.
          Which two of the following potential additional constraints would force the 
          value of <m>x_1</m> to be an integer, while remaining as close to the optimal solution of the relaxation
           as possible.
        </p>
        <ol marker="A." cols="2">
          <li>
            <p>
              <m>x_1\leq 3</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\geq 3</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\leq 4</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\geq 4</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\leq 5</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\geq 5</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\leq 6</m>.
            </p>
          </li>
          <li>
            <p>
              <m>x_1\geq 6</m>.
            </p>
          </li>
        </ol>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          Let us consider the additional constraint <m>x_1\leq 4</m>.  Solve the resulting general
          linear optimization problem:
        </p>
        <p>
          <sage>
            <input>
              %display typeset
              A = (FIXME)
              b = (FIXME)
              c = (FIXME)
              P = InteractiveLPProblem(A, b, c,
               [FIXME], 
               constraint_type = [FIXME],
               variable_type = [FIXME],
               problem_type = FIXME)
              P
            </input>         
            </sage>
            <sage>
              <input>
                print(P.optimal_solution())
                print(P.optimal_value())
              </input>         
            </sage>
      </p>
      <p>
        <image xml:id="tree1">
          <description>A Tree Diagram describing additional constraints.</description>
          <latex-image>
            \tikzset{
              treenode/.style = {shape=rectangle, rounded corners,
                                 draw, align=center,
                                 top color=white, bottom color=blue!20},
              root/.style     = {treenode, font=\Large, bottom color=red!30},
              env/.style      = {treenode, font=\ttfamily\normalsize},
              dummy/.style    = {circle,draw}
            }
            \begin{tikzpicture}
              [
                grow                    = down,
                sibling distance        = 12em,
                level distance          = 8em,
                edge from parent/.style = {draw, -latex},
                every node/.style       = {font=\footnotesize},
                sloped
              ]
              \node [root] {\(f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88\)}
                child { node [env] {\(f(?,?)=?\)}
                  edge from parent node [below] {\(x_1\leq 4\)} }
                child { node [env] {???} 
                  edge from parent node [below] {\(x_1\geq 5\)} };
            \end{tikzpicture}

          </latex-image>
        </image> 
      </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          What additional constraints on <m>x_2</m> would ensure
          that <m>x_2</m> would be integral while changing <m>x_2</m> 
          as little as possible? 
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          Consider the additional constraint <m>x_2\leq 4</m>.  Solve this maximization problem.  Why do we
          no longer need to adjust <m>x_1</m>?  Are we guaranteed that this solution
          is optimal?
        </p>
        <p>
          <image xml:id="tree2">
            <description>A Tree Diagram describing additional constraints.</description>
            <latex-image>
              \tikzset{
                treenode/.style = {shape=rectangle, rounded corners,
                                   draw, align=center,
                                   top color=white, bottom color=blue!20},
                root/.style     = {treenode, font=\Large, bottom color=red!30},
                env/.style      = {treenode, font=\ttfamily\normalsize},
                dummy/.style    = {circle,draw}
              }
              \begin{tikzpicture}
                [
                  grow                    = down,
                  sibling distance        = 12em,
                  level distance          = 8em,
                  edge from parent/.style = {draw, -latex},
                  every node/.style       = {font=\footnotesize},
                  sloped
                ]
                \node [root] {$f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88$}
                  child { node [env] {$f(?,?)=?$}
                    child { node [env] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\leq 4$} } 
                    child { node [env] {???} 
                      edge from parent node [below] {$x_2\geq 5$} } 
                    edge from parent node [below] {$x_1\leq 4$} }
                  child { node [env] {???} 
                    edge from parent node [below] {$x_1\geq 5$} };
              \end{tikzpicture}
  
            </latex-image>
          </image> 
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          We consider the constraint <m>x_2\geq 5</m> instead.  Solve this
          maximization problem.  Even though the solution is not integral, why do we no longer
          need to pursue the case where <m>x_1\leq 4, x_2\geq 5</m>?
        </p>
        <p>
          <image xml:id="tree3">
            <description>A Tree Diagram describing additional constraints.</description>
            <latex-image>
              \tikzset{
                treenode/.style = {shape=rectangle, rounded corners,
                                   draw, align=center,
                                   top color=white, bottom color=blue!20},
                root/.style     = {treenode, font=\Large, bottom color=red!30},
                env/.style      = {treenode, font=\ttfamily\normalsize},
                dummy/.style    = {circle,draw}
              }
              \begin{tikzpicture}
                [
                  grow                    = down,
                  sibling distance        = 12em,
                  level distance          = 8em,
                  edge from parent/.style = {draw, -latex},
                  every node/.style       = {font=\footnotesize},
                  sloped
                ]
                \node [root] {$f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88$}
                  child { node [env] {$f(?,?)=?$}
                    child { node [env] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\leq 4$} } 
                    child { node [env] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\geq 5$} } 
                    edge from parent node [below] {$x_1\leq 4$} }
                  child { node [env] {???} 
                    edge from parent node [below] {$x_1\geq 5$} };
              \end{tikzpicture}
  
            </latex-image>
          </image> 
        </p>
        
      </statement>
    </task>
    <task>
      <statement>
        <p>
          We return to the other possible initial constraint for <m>x_1</m>,
          <m>x_1\geq 5</m>.  Solve this maximization problem.  What are the
          possible constraints we could now add for <m>x_2</m>? 
        </p>
        <p>
          <image xml:id="tree4">
            <description>A Tree Diagram describing additional constraints.</description>
            <latex-image>
              \tikzset{
                treenode/.style = {shape=rectangle, rounded corners,
                                   draw, align=center,
                                   top color=white, bottom color=blue!20},
                root/.style     = {treenode, font=\Large, bottom color=red!30},
                env/.style      = {treenode, font=\ttfamily\normalsize},
                dummy/.style    = {circle,draw}
              }
              \begin{tikzpicture}
                [
                  grow                    = down,
                  sibling distance        = 12em,
                  level distance          = 8em,
                  edge from parent/.style = {draw, -latex},
                  every node/.style       = {font=\footnotesize},
                  sloped
                ]
                \node [root] {$f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88$}
                  child { node [env] {$f(?,?)=?$}
                    child { node [env] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\leq 4$} } 
                    child { node [env, left] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\geq 5$} } 
                    edge from parent node [below] {$x_1\leq 4$} }
                  child { node [env] {$f(?,?)=???$}
                    child { node [env, right] {???} 
                      edge from parent node [below] {$x_2\leq 3$} } 
                    child { node [env] {???} 
                      edge from parent node [below] {$x_2\geq 4$} }   
                    edge from parent node [below] {$x_1\geq 5$} };
              \end{tikzpicture}
  
            </latex-image>
          </image> 
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          We consider now the constraint <m>x_2\leq 3</m>.  Solve this
          maximization problem.  How does this solution compare to the previous
          integral solution we found?
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          Instead we now consider the constraint <m>x_2\geq 4</m>.  Solve this
          maximization problem.  Why do we no longer need to consider the case where
          <m>x_2\geq 4</m>?
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          How do we know we now have arrived at the optimal solution?
        </p>
        <p>
          <image xml:id="tree5">
            <description>A Tree Diagram describing additional constraints.</description>
            <latex-image>
              \tikzset{
                treenode/.style = {shape=rectangle, rounded corners,
                                   draw, align=center,
                                   top color=white, bottom color=blue!20},
                root/.style     = {treenode, font=\Large, bottom color=red!30},
                env/.style      = {treenode, font=\ttfamily\normalsize},
                dummy/.style    = {circle,draw}
              }
              \begin{tikzpicture}
                [
                  grow                    = down,
                  sibling distance        = 12em,
                  level distance          = 8em,
                  edge from parent/.style = {draw, -latex},
                  every node/.style       = {font=\footnotesize},
                  sloped
                ]
                \node [root] {$f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88$}
                  child { node [env] {$f(?,?)=?$}
                    child { node [env] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\leq 4$} } 
                    child { node [env, left] {$f(?,?)=?$\\ stop} 
                      edge from parent node [below] {$x_2\geq 5$} } 
                    edge from parent node [below] {$x_1\leq 4$} }
                  child { node [env] {$f(?,?)=???$}
                    child { node [env, right] {$f(?,?)=?^*$\\ stop}  
                      edge from parent node [below] {$x_2\leq 3$} } 
                    child { node [env] {infeasible\\ stop}  
                      edge from parent node [below] {$x_2\geq 4$} }   
                    edge from parent node [below] {$x_1\geq 5$} };
              \end{tikzpicture}
  
            </latex-image>
          </image> 
        </p>
      </statement>
    </task>
  </activity>

  <definition xml:id="def-branchbound">
    <statement>
      <p>
        The <em>Branch and Bound Algorithm</em> for solving an integer optimization maximization problem
        is as follows:
      </p>
      <ol>
        <li>
          <p>
            INITIALIZE: Begin with a canonical maximization integer optimization problem.
          </p>
        </li>
        <li>
          <p>
            Solve the relaxation of the linear optimization problem.  If the solution is
            integral: STOP.
          </p>
        </li>
        <li>
          <p>
            For some <m>x_i^*</m> in the optimal solution found in the previous step,
            define two sub problems, one with additional constraint <m>x_i\leq \lfloor x_i^*\rfloor</m>
            and <m>x_i\geq \lceil x_i^*\rceil</m>.
          </p>
        </li>
        <li>
          <p>
            Pick one of the subproblems and solve the linear relaxation with the additional constraint.
            
          </p>
        </li>
        <li>
          <p>
            If the solution is integral, RETURN to 4.
          </p>
        </li>
        <li>
          <p>
            If the solution is less than any integral solution found,
            RETURN to 4.
          </p>
        </li>
        <li>
          <p>
            If the problem is infeasible, RETURN to 4.
          </p>
        </li>
        <li>
          <p>
            Apply 3-7 to the new problem.
          </p>
        </li>
        <li>
          <p>
            If all subproblems are explored, RETURN to 4 for the parent problem.
          </p>
        </li>
        <li>
          <p>
            Once the search tree has been exhausted, identify the optimal 
            integral solution.
          </p>
        </li>
      </ol>
    </statement>
  </definition>

  <example>
    <statement>
      <p>
        The complete search tree for <xref ref="activity-meat1"/> is as follows:
      </p>
      <image xml:id="treecomplete">
        <description>A Tree Diagram describing additional constraints.</description>
        <latex-image>
          \tikzset{
            treenode/.style = {shape=rectangle, rounded corners,
                               draw, align=center,
                               top color=white, bottom color=blue!20},
            root/.style     = {treenode, font=\Large, bottom color=red!30},
            env/.style      = {treenode, font=\ttfamily\normalsize},
            dummy/.style    = {circle,draw}
          }
          \begin{tikzpicture}
            [
              grow                    = down,
              sibling distance        = 12em,
              level distance          = 8em,
              edge from parent/.style = {draw, -latex},
              every node/.style       = {font=\footnotesize},
              sloped
            ]
            \node [root] {Node 0:\\$f(\frac{80}{17}, \frac{70}{17})\approx f(4.706, 4.118)\approx 75.88$}
              child { node [env] {Node 1:\\ $f(4,4.4)=70.8$}
              child { node [env] {Node 2:\\$f(4,4)=68$\\ stop} 
                edge from parent node [below] {$x_2\leq 4$} } 
              child { node [env, left] {Node 3:\\ $f(2.5,5)=60$\\ stop} 
                edge from parent node [below] {$x_2\geq 5$} } 
              edge from parent node [below] {$x_1\leq 4$} }
              child { node [env] {Node 4:\\ $f(5,\frac{10}{3})\approx 73.33$}
                child { node [env, right] {Node 5:\\ $f(5,3)=71^*$\\stop} 
                  edge from parent node [below] {$x_2\leq 3$} } 
                child { node [env] {Node 6:\\ infeasible \\ stop} 
                  edge from parent node [below] {$x_2\geq 4$} }   
                edge from parent node [below] {$x_1\geq 5$} };
          \end{tikzpicture}

        </latex-image>
      </image> 
      <p>
        We start at Node 0, and identify the two subproblems.  Next, we examine the subproblem where
        <m>x_1\leq 4</m> in Node 1, and again identify two subproblems.  Examining
        Node 2 causes us to stop and return because the solution was integral.  When examining Node 3, we also stop and return
        even though the solution is not integral, since the optimal solution for that subproblem
        was already less than the solution found in Node 1, and any further exploration would lead to a lower value still.
      </p>
      <p>
        Next, we return to the starting node and to the other initial subproblem in Node 4, were
        <m>x\geq 5</m>.  When we split into the  two subproblems, <m>x_2\leq 3</m> gives
        an integral solution in Node 5, and the constraint <m>x_2\geq 6</m> gives an infeasible problem.
      </p>
      <p>
        Thus, we return, and of the two integral solutions found, <m>f(5,3)=71</m> has the highest value.
      </p>
    </statement>
  </example>

  <activity>
    <statement>
      <p>
        As the demand for meat pies skyrockets, Agnesi is now able to acquire 40 oz of floor a day,
        but now uses 10 oz of floor per meat pie to thicken the gravy.  She is able to sell these for 40 gp each.
        Use the Branch and Bound Algorithm <xref ref="def-branchbound"/> to find her
        new optimal production level.
      </p>
      
    </statement>
  </activity>

  
  

  

</section>