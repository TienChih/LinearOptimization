<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-section-initial" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Initial Examples</title>

  <p> Here we begin with some initial examples motivating the sort of problems we will study. </p>

  <activity xml:id="activity-exampleart">
    <introduction>
      <p>
        A sculptor and a painter work together to produce pieces of art, vases and figurines.  The vases takes the sculptor 1 hour to make and the painter 2 hours to paint.  
        The figurine takes the sculptor two hours to make and the painter 1 hour to paint.  
        The sculptor has 35 hours a week to work and the painter has 40 hours a week to work.
      </p>
      <p> 
        Let <m>x_1</m> denote the number of vases produced and <m>x_2</m> denote the number of figurines produced.
      </p>
      
    </introduction>
    <task>
      <statement>
        <p>
          Write two inequalities in terms of <m>x_1, x_2</m> that represent the constraints on the time of the sculptor.
        </p>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          Write two inequalities in terms of <m>x_1, x_2</m> that represent the constraints on the time of the painter.
        </p>
      </statement>
    </task>

    <task>
      <statement>
        <p>
          Treating <m>x_1</m> as <m>x</m> and <m>x_2</m> as <m>y</m>, sketch the region on the cartesian plane satisfying all the above inequalities.
        </p>
        
        <hint>
          <image xml:id="art">
            <description>The feasible region for the art shop.</description>
            <latex-image>
              \begin{tikzpicture}
                \draw[fill, blue, opacity=0.4] (0,0) -- (0,17.5) -- (15, 10) -- (20,0) -- (0,0);
                \draw[very thick,->] (-1.5,0) -- (22,0);
                \draw[very thick,->] (0,-1.5) -- (0, 22);
                \foreach \x in {0,5,...,20}\draw (\x cm,1pt) -- (\x cm,-1pt) node[anchor=north] {\tiny $\mathbf{\x}$};
                \foreach \y in {0,5,...,20}\draw (1pt,\y cm) -- (-1pt,\y cm) node[anchor=east] {\tiny $\mathbf{\y}$};
                \draw[black, thick] (0,0) -- (0,17.5) -- (15,10) --  (20,0)-- (0,0);
                \draw[red, dashed, thick] (-1,18) --node[above, sloped]{$2x+3y=22$} (22, 6.5);
                \draw[purple, dashed, thick] (9,22) --node[above left, sloped]{$x+4y=26$} (20.5, -1);
                \draw[ fill] (0,0) node[below left]{\Large$(0,0)$} circle (2pt); 
                \draw[ fill] (0,17.5) node[ above right]{\Large$(0,17.5)$} circle (2pt); 
                \draw[ fill] (15,10) node[ right]{\Large$(15,10)$} circle (2pt); 
                \draw[ fill] (20,0) node[ above right]{\Large$(20,0)$} circle (2pt);  
              \end{tikzpicture}
    
              </latex-image>
          </image> 
          </hint>
            
      </statement>
        
    </task>

    <task>
      <statement>
        <p>
          Suppose the vases sold for $100 and the figurines sold for $120.  Without reading ahead, what would or could you do to solve this problem?  What kind of things would you need to consider?
        </p>
        <p>
          For those of you who had Calculus and especially Multivariable Calculus, what ideas from those course might you employ?  What are some limitations of these ideas?
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          If there was a surge in demand for vases, and they started selling for $1000, how would that change your approach and the solution?
        </p>
      </statement>
      
    </task>

  </activity>

  <activity xml:id="activity-examplediet">
    <introduction>
      <p>
        Suppose Carlos planning a meal is shopping for a meal.  Mini bell peppers are $1.00 (simplified) a pound, Chicken is $1.25 a pound and Spaghetti with sauce is $0.80 a cup.
      </p>
      <p>
        A pound of Bell Peppers has 500 units of vitamin A, 30 calories and 10 units of calcium.   A pound of Chicken has 75 units of vitamin A, 280 calories and 22 units of calcium.  A cup of Spaghetti with sauce has 2000 units of Vitamin A, 240 Calories and 52 units of Calcium.
      </p>
      <p>
        Carlos needs a minimum of 640 calories, 1650 units of Vitamin A and 500 units of Calcium.
      </p>
    </introduction>
    
  </activity>
  <task>
    <statement>
      <p>
        Let <m>x_1</m> denote pounds of bell pepper, <m>x_2</m> denote pounds of chicken and <m>x_3</m> denote cups of spaghetti with sauce.  Find three inequalities in terms of the <m>x_i</m> for how much of each food Carlos should eat to meet his minimum dietary requirements.
      </p>
    </statement>
  </task>
  <task>
    <statement>
      <p>
        How might we solve this problem?  How is it different from <xref ref="activity-exampleart"/>?
      </p>
    </statement>
  </task>
  <task>
    <statement>
      <p>
        This seems like a wildly oversimplistic dietary problem, because it is.  How might we complicate it for more realism?
      </p>
    </statement>
  </task>

  <definition xml:id="def-canonicalproblems">
    <statement>
      <p>
        The <em>Canonical Maximazation Linear Programming Problem</em> is the problem:
        <md>
          <mrow>\textbf{Maximize: }  f(\mathbf{x}) = c_1x_1 + c_2x_2 +\cdots c_nx_n-d \amp= \left(\displaystyle\sum_{i=1}^n c_ix_i \right)-d</mrow>
          <mrow>\textbf{Subject to: }  a_{1,1}x_1 + a_{1,2}x_2 +\cdots a_{1,n}x_n\amp \leq  b_1</mrow>
          <mrow> a_{2,1}x_1 + a_{2,2}x_2 +\cdots a_{2,n}x_n\amp \leq  b_2</mrow>
          <mrow> \vdots \amp   \vdots</mrow>
          <mrow> a_{m,1}x_1 + a_{m,2}x_2 +\cdots a_{m,n}x_n\amp \leq  b_m</mrow>
          <mrow> x_1, x_2, \ldots, x_n\amp \geq  0</mrow>
        </md>
        Where <m>a_{i,j}, b_j, c_i, d\in \mathbb{R}</m>
      </p>

      <p>
        The <em>Canonical Minimization Linear Programming Problem</em> is the problem:
        <md>
          <mrow>\textbf{Minimize: }  g(\mathbf{x}) = c_1x_1 + c_2x_2 +\cdots c_nx_n-d \amp= \left(\displaystyle\sum_{i=1}^n c_ix_i \right)-d</mrow>
          <mrow>\textbf{Subject to: }  a_{1,1}x_1 + a_{1,2}x_2 +\cdots a_{1,n}x_n\amp \geq  b_1</mrow>
          <mrow> a_{2,1}x_1 + a_{2,2}x_2 +\cdots a_{2,n}x_n\amp \geq  b_2</mrow>
          <mrow> \vdots \amp   \vdots</mrow>
          <mrow> a_{m,1}x_1 + a_{m,2}x_2 +\cdots a_{m,n}x_n\amp \geq  b_m</mrow>
          <mrow> x_1, x_2, \ldots, x_n\amp \geq  0</mrow>
        </md>
        Where <m>a_{i,j}, b_j, c_i, d\in \mathbb{R}</m>
      </p>
    </statement>
  </definition>

  <definition xml:id="def-objectivefunction">
    <statement>
      <p>
        <m>f,g</m> above are called <em>objective functions</em>.
      </p>
    </statement>
  </definition>
  <definition xml:id="def-feasiblesolution">
    <statement>
      <p>
        Any point <m>\mathbf{x} = (cx_1, x_2, \ldots, x_n)</m> satisfying either of the above set of inequalities are called <em>feasible solutions</em>.
      </p>
    </statement>
  </definition>
  <definition xml:id="def-optimialsolution">
    <statement>
      <p>
        Any feasible solution <m>\mathbf{x}</m> which maximizes (minimizes) the objective function is called an  <em>optimal solution</em>.
      </p>
    </statement>
  </definition>

  <activity xml:id="activity-change">
    <task>
      <p>
        Given the canonical minimization problem:
        <md>
          <mrow>\textbf{Minimize: }g(x_1, x_2) = 5x_1-3x_2\amp </mrow>
          <mrow>\amp </mrow>
          <mrow>\textbf{Subject to: }  4x_1 + x_2 \amp \geq  10</mrow>
          <mrow> 3x_1 + 12x_2 \amp \geq  12</mrow>
          <mrow> x_1, x_2, \amp \geq  0</mrow>
        </md>
        How might we convert this to a canonical maximization problem?

      </p>
      <interactive platform="doenetml" width="100%" aspect="4:4">
        <slate surface="doenetml">
          &lt;graph xmin="-1" ymin="-1" xmax="20" ymax="20"&gt;
  &lt;polygon vertices="(0,40) (0, 10) (1.8, 2.8) (6,0) (40,0) (40,40)" filled draggable="false" styleNumber="4"/&gt;
  &lt;point name="u" styleNumber="5"&gt;
      (0,0)
    &lt;constraints&gt;
      &lt;attractTo threshold="1"&gt;&lt;point&gt;(0,10)&lt;/point&gt;&lt;/attractTo&gt;
      &lt;attractTo threshold="1"&gt;&lt;point&gt;(1.8,2.8)&lt;/point&gt;&lt;/attractTo&gt;
      &lt;attractTo threshold="1"&gt;&lt;point&gt;(6,0)&lt;/point&gt;&lt;/attractTo&gt;
    &lt;/constraints&gt;
  &lt;/point&gt;
  &lt;m draggable="false" anchor="($u.x+1,$u.y+1)"&gt;
      f$u = &lt;number&gt;$c1*$u.x+$c2*$u.y&lt;/number&gt;
    &lt;/m&gt;

  &lt;line name="line" through="$u $u+(-1*$c2, $c1)" styleNumber="2"/&gt; 

  &lt;line name="line1" styleNumber="2"&gt;4x+y=10 &lt;/line&gt;
  &lt;line name="line2" styleNumber="3"&gt;2x+3y=12 &lt;/line&gt;
    
&lt;/graph&gt;
&lt;p&gt;
  &lt;m&gt;f(x_1, x_2) =&lt;/m&gt; &lt;mathInput name="c1"/&gt; &lt;m&gt;x_1+&lt;/m&gt;&lt;mathInput name="c2"/&gt; &lt;m&gt;x_2&lt;/m&gt;.
&lt;/p&gt;

        </slate>
                </interactive>
    </task>
    <task>
      <statement>
        <p>
          How might we in general convert a minimization problem to a maximization problem?
        </p>
      </statement>
    </task>
  </activity>

</section>